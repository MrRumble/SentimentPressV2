name: CI for Flask Backend

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Add PostgreSQL service container
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: sentiment_press_db_test  # Create the test DB since tests only manage tables
        ports:
          - 5432:5432
        # Health check to ensure postgres is ready before tests run
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      POSTGRES_DB: sentiment_press_db_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      APP_ENV: test
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.2'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Verify PostgreSQL connection
        run: |
          # Install psql client if needed
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
          # Test connection to the database
          PGPASSWORD=password psql -h localhost -U postgres -d sentiment_press_db_test -c "SELECT 1"
      
      - name: Run tests
        run: python -m pytest
        env:
          # Make sure environment variables are accessible during test runs
          PGPASSWORD: password